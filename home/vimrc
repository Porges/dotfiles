set nocompatible

" Enable pathogen
runtime bundle/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect()

set autoread     " reload files if changed outside and no changes inside
set expandtab    " spaces for tabs
set tabstop=4    " tab inserts this many
set softtabstop=4
set shiftwidth=4 " >> inserts this many
set shiftround
set smarttab

set smartindent
set autoindent

set backspace=indent,eol,start

set hidden

" disable bell entirely
set vb " visual bell
set t_vb=

if has("win32")
    set guifont=Input:h10:cANSI
endif

set guioptions-=T

filetype plugin indent on
syntax on
set showmatch

set mouse=a

set wildmode=longest:full,full
set wildmenu
set completeopt=longest,menuone
set wildignorecase " ignore case for filenames

set splitbelow
set splitright

set showcmd

set hlsearch
set incsearch
set ignorecase
set smartcase " ignore case unless some uppercase letters present

set cursorline
"set relativenumber " show numbers as relative to current line
set number
set nowrap

set formatoptions+=n

" disable arrow keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" spellcheck vim commits
autocmd BufNewFile,BufRead COMMIT_EDITMSG setlocal spell

" Move visual block: http://vimrcfu.com/snippet/77
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

" Set explorer to treeview by default
let g:netrw_liststyle=3

" Setup for airline
set encoding=utf-8
let g:airline_powerline_fonts=1
set laststatus=2
" show status always
let g:airline#extensions#tabline#enabled = 1 "http://joshldavis.com/2014/04/05/vim-tab-madness-buffers-vs-tabs/
let g:airline#extensions#tabline#fnamemod = ':t'

colorscheme xoria256

" Ignore build output dirs (for both vim and ctrl-p)
set wildignore+=*\\bin\\*,*\\obj\\*,*\\objd\\*,*\\out\\*,*\\.git\\*,*.swp

" Custom filetypes
au Bufread,BufNewFile *.targets,*.props,*.proj setfiletype xml " Msbuild

" OmniSharp settings
let g:OmniSharp_selector_ui = 'ctrlp'

" map leader to space 
map <SPACE> <leader>

" GHC-mod settings
map <leader>tw :GhcModTypeInsert<CR>
map <leader>ts :GhcModSplitFunCase<CR>
map <leader>tq :GhcModType<CR>
map <leader>te :GhcModTypeClear<CR>

autocmd BufWritePost *.hs GhcModCheckAndLintAsync

" wrap the text in the error window
autocmd FileType qf setlocal wrap
" Haskell completion
let g:haskellmode_completion_ghc = 0 " disable haskell-mode completion
autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc

" SuperTab settings

autocmd FileType *
  \ if &omnifunc != '' |
  \   call SuperTabChain(&omnifunc, '<c-p>') |
  \ endif

